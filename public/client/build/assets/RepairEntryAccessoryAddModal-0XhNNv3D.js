import{r as m,j as r,b2 as E,B as A,F as T,T as b,ab as y,s as R}from"./index-C9HasOiM.js";import{u as j,t as S}from"./index-BTi6rd4V.js";import{o as g}from"./repair-C13Y1Qe-.js";import{u as w}from"./useRepair-Cho1bqHB.js";import"./repair-DgMqRd6F.js";const v=({open:e,onClose:t})=>{var i;const{register:u,handleSubmit:d,formState:{errors:n},setError:f,reset:s}=j({resolver:S(g)}),o=m.useRef(null);m.useEffect(()=>{if(!e){s();return}const a=setTimeout(()=>{e&&o.current&&o.current.focus()},100);return()=>clearTimeout(a)},[e]);const{createNewEntryAccessory:l}=w(),p=async a=>new Promise((x,c)=>{l.mutateAsync(a).then(()=>{t(),y("Acessório da entrada adicionado com sucesso!"),s(),x()}).catch(h=>{if(h.error.code==="REP-010"){f("name",{type:"manual",message:"Nome já existente"}),c();return}t(),R("Erro ao adicionar acessório da entrada!"),s(),c()})});return r.jsx(E,{mode:"form",title:"Adicionar Acessório da Entrada",open:e,onClose:t,submitButtonText:"Adicionar Acessório da Entrada",onSubmit:d(p),children:r.jsx(A,{sx:{padding:3},children:r.jsx(T,{fullWidth:!0,children:r.jsx(b,{...u("name"),label:"Nome",error:!!n.name,helperText:(i=n.name)==null?void 0:i.message,autoComplete:"off",inputRef:o})})})})};export{v as default};
