import{r as n,j as r,b2 as F,B as w,F as B,T as I,ab as P,s as z}from"./index-C9HasOiM.js";import{u as M,b as N,t as V}from"./index-BTi6rd4V.js";import{o as k}from"./repair-C13Y1Qe-.js";import{u as v}from"./useRepair-Cho1bqHB.js";import"./repair-DgMqRd6F.js";const A=({entryAccessory:e,open:t,onClose:a})=>{var d,l;const s=n.useRef(null);n.useEffect(()=>{if(!t)return;const i=setTimeout(()=>{t&&s.current&&s.current.focus()},100);return()=>clearTimeout(i)},[t]);const{control:f,register:p,handleSubmit:E,getValues:h,formState:{errors:m},setError:x,reset:o}=M({resolver:V(k)}),b={name:(e==null?void 0:e.name)||""},{isDirty:T}=N({control:f}),u=()=>!T;n.useEffect(()=>{e&&o(b)},[e]);const{updateEntryAccessory:g}=v(),R=async i=>{if(!u())return new Promise((S,c)=>{g.mutateAsync({entryAccessoryId:e.id,...i}).then(()=>{a(),P("Acessório da entrada atualizado com sucesso!"),o(),S()}).catch(j=>{if(j.error.code==="REP-010"){x("name",{type:"manual",message:"Nome já existente"}),c();return}a(),z("Erro ao atualizar acessório da entrada!"),o(),c()})})};return r.jsx(F,{mode:"form",title:"Editar Acessório da Entrada",open:t,onClose:a,submitButtonText:"Editar Acessório da Entrada",onSubmit:E(R),disabled:u(),children:r.jsx(w,{sx:{padding:3},children:r.jsx(B,{fullWidth:!0,children:r.jsx(I,{...p("name"),label:"Nome",error:!!m.name,helperText:(d=m.name)==null?void 0:d.message,autoComplete:"off",inputRef:s,InputLabelProps:{shrink:((l=h("name"))==null?void 0:l.length)>0}})})})})};export{A as default};
