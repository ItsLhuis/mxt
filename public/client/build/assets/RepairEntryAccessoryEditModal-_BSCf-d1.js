import{r as n,j as a,a$ as F,B as w,F as B,T as I,aj as P,s as z}from"./index-QasZhORg.js";import{u as M,b as N,t as V}from"./index-CO9l3Whn.js";import{o as k}from"./repair-zwE_KJbM.js";import{u as v}from"./useRepair-CKNzoFdU.js";import"./repair-wd4kSyCe.js";const q=({entryAccessory:e,open:t,onClose:r})=>{var d,l;const s=n.useRef(null);n.useEffect(()=>{if(!t)return;const i=setTimeout(()=>{t&&s.current&&s.current.focus()},100);return()=>clearTimeout(i)},[t]);const{control:f,register:p,handleSubmit:E,getValues:h,formState:{errors:m},setError:x,reset:o}=M({resolver:V(k)}),b={name:(e==null?void 0:e.name)||""},{isDirty:T}=N({control:f}),u=()=>!T;n.useEffect(()=>{e&&o(b)},[e]);const{updateEntryAccessory:g}=v(),j=async i=>{if(!u())return new Promise((R,c)=>{g.mutateAsync({entryAccessoryId:e.id,...i}).then(()=>{r(),P("Acessório da entrada atualizado com sucesso!"),o(),R()}).catch(S=>{if(S.error.code==="REP-010"){x("name",{type:"manual",message:"Nome já existente"}),c();return}r(),z("Erro ao atualizar acessório da entrada!"),o(),c()})})};return a.jsx(F,{mode:"form",title:"Editar Acessório da Entrada",open:t,onClose:r,submitButtonText:"Editar Acessório da Entrada",onSubmit:E(j),disabled:u(),children:a.jsx(w,{sx:{padding:3},children:a.jsx(B,{fullWidth:!0,children:a.jsx(I,{...p("name"),label:"Nome",error:!!m.name,helperText:(d=m.name)==null?void 0:d.message,autoComplete:"off",inputRef:s,InputLabelProps:{shrink:((l=h("name"))==null?void 0:l.length)>0}})})})})};export{q as default};
